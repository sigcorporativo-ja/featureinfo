{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/featureinfo_popup.html","webpack:///./src/templates/featureinfo.html","webpack:///./src/impl/ol/js/featureinfoControl.js","webpack:///./src/facade/js/featureinfoControl.js","webpack:///./src/facade/js/featureinfo.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FeatureInfoControl","M","impl","Control","params","facadeMap_","regExs_","gsResponse","msNewFeature","gsNewFeature","gsGeometry","msGeometry","msUnsupportedFormat","params_","userFormat","format","featureCount","utils","isNullOrEmpty","buffer","groupResults","LOADING_MESSAGE","POPUP_TITLE","POPUP_TEMPLATE","this","addOnClickEvent_","deleteOnClickEvent_","olMap","getMapImpl","normalize","on","evt","buildUrl_","map","html","removeEventListener","viewResolution","getView","getResolution","srs","getProjection","code","layerNamesUrls","getWMS","forEach","layer","olLayer","getImpl","getOL3Layer","isVisible","isQueryable","getFeatureInfoParams","test","url","getSource","getGetFeatureInfoUrl","coordinate","push","legend","length","showInfoFromURL_","dialog","info","formato","res","infoContainer","document","createElement","innerHTML","content","Array","querySelectorAll","element","trim","ol","WFS","readFeatures","layerName","formatedInfo","features","feature","attr","getKeys","beautifyAttribute","ilen","attrName","attrValue","txtToHtml_Geoserver_","txtToHtml_Mapserver_","unsupported","attrValuesString","replace","split","attrValueString","indexOf","htmlHeader","nextAttrValueString","lstLayers","loadingInfoTab","popup","tabsFeatureInfo","String","contFull","this_","htmlAsText","template","compileSync","getPopup","removePopup","Popup","addTab","addPopup","dataLayer","layerTitle","remote","then","response","error","text","insert_","formatInfo_","unsupportedFormat_","icon","title","removeTab","data","join","options","isUndefined","FeatureInfoImplControl","exception","options_","string","parseToHtml","templateVars","vars","htmlText","Handlebars","compile","templateFn","stringToHtml","Promise","success","fail","querySelector","obj","equals","FeatureInfo","Plugin","parameters","map_","controls_","ctrol","panel_","getPanel_","addControls","addPanels","ACTIVATED","getPanels","panel","getControls","deactiveAll","deactivate","ADDED_TO_MAP","fire","maintoolbar","appendChild","_element","_areaContainer","ui","Panel","getPanelOptions_","TOOLS","opt_","collapsible","className","collapsedButtonClass","collapsedClass","position","TL","tooltip","window","plugin","control","M$plugin$FeatureInfo","M$plugin$FeatureInfoControl","LocalLayersControl","M$impl$control$LocalLayersControl"],"mappings":"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","file":"featureinfo.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = \"<div class=\\\"m-getfeatureinfo-content\\\">\\n   {{{info}}}\\n</div>\";","module.exports = \"<div class=\\\"m-control m-getfeatureinfo-container\\\" id=\\\"infoGetFeature\\\">\\r\\n    <button id=\\\"m-getfeatureinfo-button\\\" class=\\\"g-cartografia-info\\\" title=\\\"Consultar capa\\\"></button>\\r\\n</div>\";","\r\n/**\r\n * @module M/impl/control/LocalLayersControl\r\n */\r\nimport template from 'templates/featureinfo_popup';\r\n\r\nexport default class FeatureInfoControl extends M.impl.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the FeatureInfoControl.\r\n   *\r\n   * @constructor\r\n   * @extends {M.impl.Control}\r\n   * @api stable\r\n   */\r\n  constructor(params) {\r\n    // 2. implementation of this control\r\n    super();\r\n\r\n    this.facadeMap_ = null;\r\n\r\n    this.regExs_ = {\r\n      gsResponse: /^results[\\w\\s\\S]*\\'http\\:/i,\r\n      msNewFeature: /feature(\\s*)(\\w+)(\\s*)\\:/i,\r\n      gsNewFeature: /\\#newfeature\\#/,\r\n      gsGeometry: /geom$/i,\r\n      msGeometry: /boundedby$/i,\r\n      msUnsupportedFormat: /error(.*)unsupported(.*)info\\_format/i\r\n    };\r\n\r\n    /**\r\n\t * Parametros de configuracion del control para implementacion\r\n\t * Configuracion por defecto:\r\n\t \t\t{String} format:  'html',\r\n\t \t\t{Number} buffer: 1000,\r\n\t\t\t{Number} featureCount: 10,\r\n\t\t\t{Boolean} groupResults: false\r\n\t * @private\r\n\t * @type {object}\r\n\t */\r\n    this.params_ = params || {};\r\n\r\n    /**\r\n     * Format response\r\n     * @public\r\n     * @type {String}\r\n     * @api stable\r\n     */\r\n    this.userFormat = this.params_.format;\r\n\r\n    /**\r\n     * Number of elements of the result\r\n     * @public\r\n     * @type {Number}\r\n     * @api stable\r\n     */\r\n    this.featureCount = this.params_.featureCount;\r\n    if (M.utils.isNullOrEmpty(this.featureCount)) {\r\n      this.featureCount = 10;\r\n    }\r\n\r\n    /**\r\n     * Buffer\r\n     * @public\r\n     * @type {Integer}\r\n     * @api stable\r\n     */\r\n    this.buffer = this.params_.buffer;\r\n\r\n    /**\r\n     * Group results to show for each layer\r\n     * @public\r\n     * @type {boolean}\r\n     * @api stable\r\n     */\r\n    //Por defecto mostrar resultados en un tab (funcionamiento original de mapea)\r\n    this.groupResults = ((!M.utils.isNullOrEmpty(this.params_.groupResults)) ? this.params_.groupResults : false);\r\n\r\n    /**\r\n     * Loading message\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    this.LOADING_MESSAGE = 'Obteniendo información...';\r\n\r\n    /**\r\n     * Title for the popup\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    this.POPUP_TITLE = 'Información';\r\n\r\n\r\n    /**\r\n     * Template for this controls - popup\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    this.POPUP_TEMPLATE = 'featureinfo_popup.html';\r\n  }\r\n\r\n\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the plugin\r\n   * @param {HTMLElement} html of the plugin\r\n   * @api stable\r\n   */\r\n\r\n  /**\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  activate() {\r\n    this.addOnClickEvent_();\r\n  }\r\n\r\n  /**\r\n   * This function remove the event singleclick to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  deactivate() {\r\n    this.deleteOnClickEvent_();\r\n  }\r\n\r\n  /**\r\n   * This function adds the event singleclick to the specified map\r\n   *\r\n   * @private\r\n   * @function\r\n   */\r\n  addOnClickEvent_() {\r\n    let olMap = this.facadeMap_.getMapImpl();\r\n    if ((M.utils.normalize(this.userFormat) === \"plain\") || (M.utils.normalize(this.userFormat) === \"text/plain\")) {\r\n      this.userFormat = \"text/plain\";\r\n    } else if ((M.utils.normalize(this.userFormat) === \"gml\") || (M.utils.normalize(this.userFormat) === \"application/vnd.ogc.gml\")) {\r\n      this.userFormat = \"application/vnd.ogc.gml\";\r\n    } else {\r\n      this.userFormat = \"text/html\";\r\n    }\r\n    //olMap.on('singleclick', this.buildUrl_, this);\r\n    olMap.on('singleclick', (evt) => this.buildUrl_(evt), this);\r\n  }\r\n\r\n  addTo(map, html) {\r\n    this.facadeMap_ = map;\r\n    super.addTo(map, html);\r\n  }\r\n\r\n  /**\r\n   * This function remove the event singleclick to the specified map\r\n   *\r\n   * @private\r\n   * @function\r\n   */\r\n  deleteOnClickEvent_() {\r\n    let olMap = this.facadeMap_.getMapImpl();\r\n    //olMap.un('singleclick', (evt) => this.buildUrl_(evt), this);\r\n    olMap.removeEventListener('singleclick',this.buildUrl_);\r\n  }\r\n\r\n  /**\r\n   * This function builds the query URL and show results\r\n   *\r\n   * @private\r\n   * @function\r\n   * @param {ol.MapBrowserPointerEvent} evt - Browser point event\r\n   */\r\n  buildUrl_(evt) {\r\n    let olMap = this.facadeMap_.getMapImpl();\r\n    let viewResolution = olMap.getView().getResolution();\r\n    let srs = this.facadeMap_.getProjection().code;\r\n    let layerNamesUrls = [];\r\n    this.facadeMap_.getWMS().forEach((layer) => {\r\n      let olLayer = layer.getImpl().getOL3Layer();\r\n      if (layer.isVisible() && layer.isQueryable() && !M.utils.isNullOrEmpty(olLayer)) {\r\n        let getFeatureInfoParams = {\r\n          'INFO_FORMAT': this.userFormat,\r\n          'FEATURE_COUNT': this.featureCount,\r\n        };\r\n        if (!/buffer/i.test(layer.url)) {\r\n          getFeatureInfoParams['Buffer'] = this.buffer;\r\n        }\r\n        let url = olLayer.getSource().getGetFeatureInfoUrl(evt.coordinate, viewResolution, srs, getFeatureInfoParams);\r\n        layerNamesUrls.push({\r\n          'title': layer.legend,\r\n          'layer': layer.name,\r\n          'url': url\r\n        });\r\n      }\r\n    }, this);\r\n    if (layerNamesUrls.length > 0) {\r\n      this.showInfoFromURL_(layerNamesUrls, evt.coordinate, olMap);\r\n    } else {\r\n      M.dialog.info('No existen capas consultables');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function specifies whether the information is valid\r\n   *\r\n   * @param {string} info - Information to validate\r\n   * @param {string} formato - Specific format to validate\r\n   * @returns {boolean} res - Is valid or not format\r\n   * @private\r\n   * @function\r\n   */\r\n  insert_(info, formato) {\r\n    let res = false;\r\n    switch (formato) {\r\n      case \"text/html\":\r\n        // ex\r\n        let infoContainer = document.createElement(\"div\");\r\n        infoContainer.innerHTML = info;\r\n\r\n        // content\r\n        let content = \"\";\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('body'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('div'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('table'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('b'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('span'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('input'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('a'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('img'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('p'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('ul'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('li'), (element) => {\r\n          content += element.innerHTML.trim();\r\n        });\r\n\r\n        if ((content.length > 0) && !/WMS\\s+server\\s+error/i.test(info)) {\r\n          res = true;\r\n        }\r\n        break;\r\n      case \"application/vnd.ogc.gml\":\r\n        // ol.format.GML (http://openlayers.org/en/v3.9.0/apidoc/ol.format.GML.html)\r\n        let formater = new ol.format.WFS();\r\n        let features = formater.readFeatures(info);\r\n        res = (features.length > 0);\r\n        break;\r\n      case \"text/plain\":\r\n        // exp reg\r\n        if (!/returned\\s+no\\s+results/i.test(info) && !/features\\s+were\\s+found/i.test(info) && !/:$/i.test(info)) {\r\n          res = true;\r\n        }\r\n        break;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * This function formats the response\r\n   *\r\n   * @param {string} info - Information to formatting\r\n   * @param {string} formato - Specific format\r\n   * @param {string} layername - Layer name\r\n   * @returns {string} information - Formatted information\r\n   * @private\r\n   * @function\r\n   */\r\n  formatInfo_(info, formato, layerName) {\r\n    let formatedInfo = null;\r\n    switch (formato) {\r\n      case \"text/html\": // ex\r\n        formatedInfo = info;\r\n        break;\r\n      case \"application/vnd.ogc.gml\": // ol.format.GML (http://openlayers.org/en/v3.9.0/apidoc/ol.format.GML.html)\r\n        // let formater = new ol.format.GML();\r\n        // let feature = formater.readFeatures(info)[0];\r\n        let formater = new ol.format.WFS();\r\n        let features = formater.readFeatures(info);\r\n        formatedInfo = \"\";\r\n        features.forEach((feature) => {\r\n          let attr = feature.getKeys();\r\n          formatedInfo += \"<div class=\\\"divinfo\\\">\";\r\n          formatedInfo += \"<table class=\\\"mapea-table\\\"><tbody><tr><td class=\\\"header\\\" colspan=\\\"3\\\">\" + M.utils.beautifyAttribute(layerName) + \"</td></tr>\";\r\n          for (let i = 0,\r\n            ilen = attr.length; i < ilen; i++) {\r\n            let attrName = attr[i];\r\n            let attrValue = feature.get(attrName);\r\n\r\n            formatedInfo += '<tr><td class=\"key\"><b>';\r\n            formatedInfo += M.utils.beautifyAttribute(attrName);\r\n            formatedInfo += '</b></td><td class=\"value\">';\r\n            formatedInfo += attrValue;\r\n            formatedInfo += \"</td></tr>\";\r\n          }\r\n          formatedInfo += \"</tbody></table></div>\";\r\n        });\r\n        break;\r\n      case \"text/plain\": // exp reg\r\n        if (this.regExs_.gsResponse.test(info)) {\r\n          formatedInfo = this.txtToHtml_Geoserver_(info, layerName);\r\n        } else {\r\n          formatedInfo = this.txtToHtml_Mapserver_(info, layerName);\r\n        }\r\n        break;\r\n    }\r\n    return formatedInfo;\r\n  }\r\n\r\n  /**\r\n   * This function indicates whether the format is accepted by the layer - Specific format text/html\r\n   *\r\n   * @param {string} info - Response to consult layer\r\n   * @param {string} formato - Specific format\r\n   * @returns {boolean} unsupported - It indicates whether the format is accepted\r\n   * @private\r\n   * @function\r\n   */\r\n  unsupportedFormat_(info, formato) {\r\n    let unsupported = false;\r\n    if (formato === \"text/html\") {\r\n      unsupported = this.regExs_.msUnsupportedFormat.test(info);\r\n    }\r\n    return unsupported;\r\n  }\r\n\r\n  /**\r\n   * This function return formatted information. Specific Geoserver\r\n   *\r\n   * @private\r\n   * @function\r\n   * @param {string} info - Information to formatting\r\n   * @param {string} layername - Layer name\r\n   * @returns {string} html - Information formated\r\n   */\r\n  txtToHtml_Geoserver_(info, layerName) {\r\n    // get layer name from the header\r\n    // let layerName = info.replace(/[\\w\\s\\S]*\\:(\\w*)\\'\\:[\\s\\S\\w]*/i, \"$1\");\r\n\r\n    // remove header\r\n    info = info.replace(/[\\w\\s\\S]*\\'\\:/i, \"\");\r\n\r\n    info = info.replace(/---(\\-*)(\\n+)---(\\-*)/g, \"#newfeature#\");\r\n\r\n    let attrValuesString = info.split(\"\\n\");\r\n\r\n    let html = \"<div class=\\\"divinfo\\\">\";\r\n\r\n    // build the table\r\n    html += \"<table class=\\\"mapea-table\\\"><tbody><tr><td class=\\\"header\\\" colspan=\\\"3\\\">\" + M.utils.beautifyAttribute(layerName) + \"</td></tr>\";\r\n\r\n    for (let i = 0,\r\n      ilen = attrValuesString.length; i < ilen; i++) {\r\n      let attrValueString = attrValuesString[i].trim();\r\n      if (attrValueString.indexOf(\"=\") != -1) {\r\n        let attrValue = attrValueString.split(\"=\");\r\n        let attr = attrValue[0].trim();\r\n        let value = \"-\";\r\n        if (attrValue.length > 1) {\r\n          value = attrValue[1].trim();\r\n          if (value.length === 0 || value === \"null\") {\r\n            value = \"-\";\r\n          }\r\n        }\r\n\r\n        if (this.regExs_.gsGeometry.test(attr) === false) {\r\n          html += '<tr><td class=\"key\"><b>';\r\n          html += M.utils.beautifyAttribute(attr);\r\n          html += '</b></td><td class=\"value\">';\r\n          html += value;\r\n          html += \"</td></tr>\";\r\n        }\r\n      } else if (this.regExs_.gsNewFeature.test(attrValueString)) {\r\n        // set new header\r\n        html += \"<tr><td class=\\\"header\\\" colspan=\\\"3\\\">\" + M.utils.beautifyAttribute(layerName) + \"</td></tr>\";\r\n      }\r\n    }\r\n\r\n    html += \"</tbody></table></div>\";\r\n\r\n    return html;\r\n  }\r\n\r\n  /**\r\n   * This function return formatted information. Specific Mapserver\r\n   *\r\n   * @private\r\n   * @function\r\n   * @param {string} info - Information to formatting\r\n   * @returns {string} html - Information formated\r\n   */\r\n  txtToHtml_Mapserver_(info) {\r\n    // remove header\r\n    info = info.replace(/[\\w\\s\\S]*(layer)/i, \"$1\");\r\n\r\n    // get layer name\r\n    let layerName = info.replace(/layer(\\s*)\\'(\\w+)\\'[\\w\\s\\S]*/i, \"$2\");\r\n\r\n    // remove layer name\r\n    info = info.replace(/layer(\\s*)\\'(\\w+)\\'([\\w\\s\\S]*)/i, \"$3\");\r\n\r\n    // remove feature number\r\n    info = info.replace(/feature(\\s*)(\\w*)(\\s*)(\\:)([\\w\\s\\S]*)/i, \"$5\");\r\n\r\n    // remove simple quotes\r\n    info = info.replace(/\\'/g, \"\");\r\n\r\n    // replace the equal (=) with (;)\r\n    info = info.replace(/\\=/g, ';');\r\n\r\n    let attrValuesString = info.split(\"\\n\");\r\n\r\n    let html = \"\";\r\n    let htmlHeader = \"<table class=\\\"mapea-table\\\"><tbody><tr><td class=\\\"header\\\" colspan=\\\"3\\\">\" + M.utils.beautifyAttribute(layerName) + \"</td></tr>\";\r\n\r\n    for (let i = 0,\r\n      ilen = attrValuesString.length; i < ilen; i++) {\r\n      let attrValueString = attrValuesString[i].trim();\r\n      let nextAttrValueString = attrValuesString[i] ? attrValuesString[i].trim() : \"\";\r\n      let attrValue = attrValueString.split(\";\");\r\n      let attr = attrValue[0].trim();\r\n      let value = \"-\";\r\n      if (attrValue.length > 1) {\r\n        value = attrValue[1].trim();\r\n        if (value.length === 0) {\r\n          value = \"-\";\r\n        }\r\n      }\r\n\r\n      if (attr.length > 0) {\r\n        if (this.regExs_.msNewFeature.test(attr)) {\r\n          if ((nextAttrValueString.length > 0) && !this.regExs_.msNewFeature.test(nextAttrValueString)) {\r\n            // set new header\r\n            html += \"<tr><td class=\\\"header\\\" colspan=\\\"3\\\">\" + M.utils.beautifyAttribute(layerName) + \"</td><td></td></tr>\";\r\n          }\r\n        } else {\r\n          html += '<tr><td class=\"key\"><b>';\r\n          html += M.utils.beautifyAttribute(attr);\r\n          html += '</b></td><td class=\"value\">';\r\n          html += value;\r\n          html += \"</td></tr>\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (html.length > 0) {\r\n      html = htmlHeader + html + \"</tbody></table>\";\r\n    }\r\n\r\n    return html;\r\n  }\r\n\r\n  /**\r\n   * This function displays information in a popup\r\n   *\r\n   * @private\r\n   * @function\r\n   * @param {array<object>} layers - Consulted layers\r\n   * @param {array} coordinate - Coordinate position onClick\r\n   * @param {olMap} olMap - Map\r\n   */\r\n  showInfoFromURL_(lstLayers, coordinate, olMap) {\r\n    let content = '';\r\n    let tabsFeatureInfo = [];\r\n    let formato = String(this.userFormat);\r\n    let contFull = 0;\r\n    let this_ = this;\r\n    let loadingInfoTab;\r\n    let popup;\r\n    let htmlAsText = M.template.compileSync(template, {\r\n      //'jsonp' : true,\r\n      'vars': {\r\n        'info': this.LOADING_MESSAGE\r\n      },\r\n      'parseToHtml': false\r\n    });\r\n\r\n        popup = this_.facadeMap_.getPopup();\r\n        loadingInfoTab = {\r\n          'icon': 'g-cartografia-info',\r\n          'title': this_.POPUP_TITLE,\r\n          'content': htmlAsText\r\n        };\r\n        /* if (M.utils.isNullOrEmpty(popup)) {\r\n          popup = new M.Popup();\r\n          popup.addTab(loadingInfoTab);\r\n          this_.facadeMap_.addPopup(popup, coordinate);\r\n        } else {\r\n          // removes popup if all contents are getfeatureinfo\r\n          let hasExternalContent = popup.getTabs().some((tab) => {\r\n            return (tab['title'] !== this_.POPUP_TITLE);\r\n          });\r\n          if (!hasExternalContent) {\r\n            this_.facadeMap_.removePopup();\r\n            popup = new M.Popup();\r\n            popup.addTab(loadingInfoTab);\r\n            this_.facadeMap_.addPopup(popup, coordinate);\r\n          } else {\r\n            popup.addTab(loadingInfoTab);\r\n          }\r\n        } */\r\n        if (!M.utils.isNullOrEmpty(popup)) {\r\n          this_.facadeMap_.removePopup();\r\n        }\r\n        popup = new M.Popup();\r\n        popup.addTab(loadingInfoTab);\r\n        this_.facadeMap_.addPopup(popup, coordinate);\r\n    \r\n\r\n    lstLayers.forEach((dataLayer) => {\r\n      let url = dataLayer['url'];\r\n      let layerName = dataLayer['layer'];\r\n      let layerTitle = ((!M.utils.isNullOrEmpty(dataLayer['title'])) ? dataLayer['title'] : layerName);\r\n      M.remote.get(url).then((response) => {\r\n        //Peticion correcta: formatear resultados\r\n        if ((response.code === 200) && (response.error === false)) {\r\n          let formatedInfo = '';\r\n          let info = response.text;\r\n          if (this_.insert_(info, formato) === true) {\r\n            formatedInfo = this_.formatInfo_(info, formato, layerName);\r\n          } else if (this_.unsupportedFormat_(info, formato)) {\r\n            formatedInfo = 'La capa <b>' + layerName + '</b> no soporta el formato <i>' + formato + '</i>';\r\n          }\r\n          //Annadir resultado feature\r\n          if (formatedInfo !== '') {\r\n            content = '<div class=\"title titleFeatureInfo\">' + (this_.POPUP_TITLE + ': ' + layerTitle) + '</div>' + formatedInfo;\r\n            tabsFeatureInfo.push({\r\n              icon: 'g-cartografia-info',\r\n              title: this_.POPUP_TITLE + ': ' + layerTitle,\r\n              content: content\r\n            });\r\n          }\r\n        }\r\n\r\n        //Finalizadas todas las peticiones mostrar resultados\r\n        if (lstLayers.length === ++contFull) {\r\n          popup = this_.facadeMap_.getPopup();\r\n          //Mostrar resultados\r\n          if (!M.utils.isNullOrEmpty(popup)) {\r\n            //Eliminar tab: cargando informacion\r\n            popup.removeTab(loadingInfoTab);\r\n            //Si no tenemos datos de ninguna capa: mostrar mensaje unico generico\r\n            if (tabsFeatureInfo && tabsFeatureInfo.length == 0) {\r\n              popup.addTab({\r\n                icon: 'g-cartografia-info',\r\n                title: this_.POPUP_TITLE,\r\n                content: 'No hay información asociada.'\r\n              });\r\n            } else {\r\n              //TODO: Posibilidad: crear aqui plantilla para generar informacion con los datos que tenemos y añadir al popup en un solo tab\r\n              //Mostrar un tab por cada cada capa\r\n              if (this_.groupResults == true) {\r\n                for (let i = 0; i < tabsFeatureInfo.length; i++) {\r\n                  popup.addTab(tabsFeatureInfo[i]);\r\n                }\r\n              } else {\r\n                let data = [];\r\n                //Generar contenidos para fusionar\r\n                for (let i = 0; i < tabsFeatureInfo.length; i++) {\r\n                  data.push(tabsFeatureInfo[i].content);\r\n                }\r\n                //Mostrar todos las capas en el mismo tab\r\n                popup.addTab({\r\n                  icon: 'g-cartografia-info',\r\n                  title: this_.POPUP_TITLE,\r\n                  content: data.join('')\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n}","/**\r\n * @module M/plugin/FeatureInfoControl\r\n */\r\nimport FeatureInfoImplControl from 'impl/featureinfoControl';\r\nimport template from 'templates/featureinfo';\r\n\r\nexport default class FeatureInfoControl extends M.Control {\r\n\r\n  /**\r\n   * Name to identify this control\r\n   * @const\r\n   * @type {string}\r\n   * @public\r\n   * @api stable\r\n   */\r\n  static get NAME() {\r\n    return 'FeatureInfo';\r\n  }\r\n\r\n  /**\r\n   * Name to identify url template\r\n   * @const\r\n   * @type {string}\r\n   * @public\r\n   * @api stable\r\n   */\r\n  static get TEMPLATE() {\r\n    return 'featureinfo.html';\r\n  }\r\n\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a PluginControl\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(params, options) {\r\n    // 1. checks if the implementation can create PluginControl\r\n    if (M.utils.isUndefined(FeatureInfoImplControl)) {\r\n      M.exception('La implementación usada no puede crear controles PluginControl');\r\n    }\r\n    // 2. implementation of this control\r\n    let impl = new FeatureInfoImplControl(params);\r\n    super(impl, \"FeatureInfo\");\r\n\r\n    /**\r\n     * Params of the control\r\n     * @private\r\n     * @type {params}\r\n     */\r\n    this.params_ = params || {};\r\n\r\n    /**\r\n     * Options of the control\r\n     * @private\r\n     * @type {options}\r\n     */\r\n    this.options_ = options || {};\r\n\r\n  }\r\n  /**\r\n   * This function creates the view\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the control\r\n   * @api stable\r\n   */\r\n  createView(map) {\r\n    this.facadeMap_ = map;\r\n    if (!M.template.compileSync) { // JGL: retrocompatibilidad Mapea4\r\n      M.template.compileSync = (string, options) => {\r\n        let templateCompiled;\r\n        let templateVars = {};\r\n        let parseToHtml;\r\n        if (!M.utils.isUndefined(options)) {\r\n          templateVars = M.utils.extends(templateVars, options.vars);\r\n          parseToHtml = options.parseToHtml;\r\n        }\r\n        const templateFn = Handlebars.compile(string);\r\n        const htmlText = templateFn(templateVars);\r\n        if (parseToHtml !== false) {\r\n          templateCompiled = M.utils.stringToHtml(htmlText);\r\n        } else {\r\n          templateCompiled = htmlText;\r\n        }\r\n        return templateCompiled;\r\n      };\r\n    }\r\n    \r\n    return new Promise((success, fail) => {\r\n      const html = M.template.compileSync(template);\r\n      // Añadir código dependiente del DOM\r\n      success(html);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @function\r\n   * @param {HTMLElement} html to add the plugin\r\n   * @api stable\r\n   * @export\r\n   */\r\n  getActivationButton(html) {\r\n    return html.querySelector('button#m-getfeatureinfo-button');\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @function\r\n   * @param {HTMLElement} html to add the plugin\r\n   * @api stable\r\n   * @export\r\n   */\r\n  equals(obj) {\r\n    let equals = false;\r\n    if (obj instanceof FeatureInfoControl) {\r\n      equals = (this.name === obj.name);\r\n    }\r\n    return equals;\r\n  }\r\n}","/**\r\n * @module M/plugin/FeatureInfo\r\n */\r\nimport FeatureInfoControl from './featureinfoControl.js';\r\nimport 'assets/css/featureinfo';\r\n\r\nexport default class FeatureInfo extends M.Plugin {\r\n\r\n  /**\r\n   * @classdesc\r\n   * Main facade plugin object. This class creates a plugin\r\n   * object which has an implementation Object\r\n   *\r\n   * @constructor\r\n   * @extends {M.Plugin}\r\n   * @param {Object} impl implementation object\r\n   * @api stable\r\n   */\r\n  constructor(parameters) {\r\n\r\n    super();\r\n    /**\r\n     * Facade of the map\r\n     * @private\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * Array of controls\r\n     * @private\r\n     * @type {Array<M.Control>}\r\n     */\r\n    this.controls_ = [];\r\n\r\n    /**\r\n     * add your variables\r\n     *\r\n     */\r\n    //Proceso de parametros enviados\r\n    parameters = parameters || {};\r\n\r\n    /**\r\n     * Params config control\r\n     * Configuracion por defecto:\r\n          {String} format:  'html',\r\n          {Number} buffer: 1000,\r\n        {Number} featureCount: 10,\r\n        {Boolean} groupResults: false\r\n     * @private\r\n     * @type {object}\r\n     */\r\n    this.params_ = parameters.params || {};\r\n\r\n    /**\r\n     * Options of the controls\r\n     * Configuracion por defecto: (panel tools de mapea, si exite NO se crea)\r\n         panel: {\r\n            {String} name: \t\t\t'tools',\r\n            {String} className: \t'm-tools-bar',\r\n            {String} iconClass: \t'g-cartografia-herramienta',\r\n            {String} position:  \t M.ui.position.TL,\r\n            {String} tooltip: \t\t'Herramientas'\r\n       }\r\n     * @private\r\n     * @type {object}\r\n     */\r\n    this.options_ = parameters.options || {};\r\n\r\n  }\r\n\r\n  /**\r\n   * This function adds this plugin into the map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map the map to add the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map) {\r\n    let this_ = this;\r\n    this.map_ = map;\r\n    let ctrol = null;\r\n    //Validar formato\r\n    if ((!M.utils.isNullOrEmpty(this.params_.format)) && (this.params_.format !== 'plain' && this.params_.format !== 'html' && this.params_.format !== 'gml')) {\r\n      M.dialog.error('El formato solicitado para la información no está disponible. Inténtelo utilizando gml, plain o html.');\r\n    } else {\r\n      ctrol = new FeatureInfoControl(this.params_, this.options_);\r\n      this.controls_.push(ctrol);\r\n      // Asignar los controles al panel y el panel al mapa\r\n      this.panel_ = this.getPanel_();\r\n      this.panel_.addControls(this.controls_);\r\n      this.map_.addPanels(this.panel_);\r\n\r\n      ctrol.on(M.evt.ACTIVATED, () => {\r\n        // Desactivo los plugins conflictivos al activarse el control\r\n        const conflictedPlugins = ['drawing', 'measurebar'];\r\n        for (const panel of map.getPanels(conflictedPlugins)) {\r\n          if (panel.name == 'drawing') {\r\n            panel.getControls()[0].deactiveAll();\r\n          }\r\n          if (panel.name == 'measurebar') {\r\n            for (const control of panel.getControls()) {\r\n              control.deactivate();\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n      ctrol.on(M.evt.ADDED_TO_MAP, function () {\r\n        this_.fire(M.evt.ADDED_TO_MAP);\r\n        //TODO: TEMPORAL VER COMO PARAMETRIZAR\r\n        //Movemos contenido del control al nivel de controles\r\n        let maintoolbar = document.querySelector('#maintoolbar');\r\n        if (maintoolbar) {\r\n          maintoolbar.appendChild(this.panel_._element);\r\n          this.panel_._areaContainer = maintoolbar;\r\n        }\r\n      }, this);\r\n    }\r\n  }\r\n\r\n  getPanel_() {\r\n    //Comprobar si el panel existe\r\n    let name = ((!M.utils.isNullOrEmpty(this.options_.panel) && !M.utils.isNullOrEmpty(this.options_.panel.name)) ? this.options_.panel.name : 'featureinfo');\r\n    let panel = this.map_.getPanels(name)[0];\r\n    //Si no existe lo creamos\r\n    if (M.utils.isNullOrEmpty(panel)) {\r\n      panel = new M.ui.Panel(name, this.getPanelOptions_());\r\n      //Si creamos el panel estandar de mapea y lo registramos en el mapa\r\n      if (M.utils.isNullOrEmpty(this.map_.panel.TOOLS) && name == 'featureinfo') {\r\n        this.map_.panel.TOOLS = panel;\r\n      }\r\n    }\r\n    return panel;\r\n  }\r\n  getPanelOptions_() {\r\n    let opt_ = {};\r\n    if (!M.utils.isNullOrEmpty(this.options_.panel))\r\n      opt_ = this.options_.panel;\r\n\r\n    let panelOptions_ = {\r\n      collapsible: false,\r\n      className: 'm-tools-bar m-tools' + ((!M.utils.isNullOrEmpty(opt_.className)) ? (' ' + opt_.className) : ''),\r\n      collapsedButtonClass: ((!M.utils.isNullOrEmpty(opt_.collapsedClass)) ? opt_.collapsedClass : 'g-cartografia-info'),\r\n      position: ((!M.utils.isNullOrEmpty(opt_.position)) ? opt_.position : M.ui.position.TL),\r\n      tooltip: ((!M.utils.isNullOrEmpty(opt_.tooltip)) ? opt_.tooltip : 'Consultar capa')\r\n    };\r\n    return panelOptions_;\r\n  }\r\n}","import M$plugin$FeatureInfo from '/home/fbmanas/Codigo/tmp/catastrosearch_create_plugin/featureinfo/src/facade/js/featureinfo';\nimport M$plugin$FeatureInfoControl from '/home/fbmanas/Codigo/tmp/catastrosearch_create_plugin/featureinfo/src/facade/js/featureinfoControl';\nimport M$impl$control$LocalLayersControl from '/home/fbmanas/Codigo/tmp/catastrosearch_create_plugin/featureinfo/src/impl/ol/js/featureinfoControl';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.FeatureInfo = M$plugin$FeatureInfo;\nwindow.M.plugin.FeatureInfoControl = M$plugin$FeatureInfoControl;\nwindow.M.impl.control.LocalLayersControl = M$impl$control$LocalLayersControl;\n"],"sourceRoot":""}